pipeline {
    agent { label "GoNode" }

    environment {
        DOCKERHUB_CREDENTIALS = '6056e3e4-1d9d-4240-8e14-48bf5ffea0b6'
        DB_NAME = credentials('18ed7c31-b94b-4d92-91c5-10c579cc891a')
        DB_USER = credentials('e6c490fa-50ae-4035-9226-b1d827b45b04')
        DB_PASS = credentials('da539aac-0948-486f-8d71-4fc0621d8ee8')
        DB_HOST = credentials('d12d1899-2a91-45fc-af0c-952b689a231a')
        DB_PORT = credentials('f34d3a07-14d9-4e5d-989a-9539993e440c')
        SECRET_KEY = credentials('abeb979c-75c5-4acf-8c9c-2f6456fd75b0')
    }

    stages {
        stage('Remove old build') {
            steps {
                sh 'docker ps -q --filter name=golibrarybackend | xargs -r docker stop'
                sh 'docker ps -q --filter name=golibrarybackend | xargs -r docker rm'
                sh 'docker system prune -af'
            }
        }

        stage('Build') {
            steps {
                checkout scm
                sh 'docker build -t golibrarybackend .'
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: DOCKERHUB_CREDENTIALS, usernameVariable: 'DOCKERHUB_USERNAME', passwordVariable: 'DOCKERHUB_PASSWORD')]) {
                    sh 'docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD'
                    sh 'docker tag golibrarybackend joemuldowney/virtual_library_cart'
                    sh 'docker push joemuldowney/virtual_library_cart'
                }
            }
        }

        stage('Deploy on server') {
            steps {
                sh 'docker run -d -p 8020:8020 --name golibrarybackend \
                -e DB_NAME=$DB_NAME \
                -e DB_USER=$DB_USER \
                -e DB_PASS=$DB_PASS \
                -e DB_PORT=$DB_PORT \
                -e DB_HOST=$DB_HOST \
                -e SECRET_KEY=$SECRET_KEY \
                joemuldowney/virtual_library_cart'
            }
        }
    }
}